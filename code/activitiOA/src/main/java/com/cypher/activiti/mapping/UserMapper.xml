<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cypher.activiti.dao.UserMapper">
	<!-- 所有字段 sql片段 -->
	<sql id="Base_Column_List">
		USER_ID,DEPT_ID,LOGIN_NAME,PASSWORD,
		USER_NO,USER_NAME,EMAIL,PHONE,MOBILE,
		UPDATE_BY,UPDATE_DATE,REMARKS
	</sql>

	<!--将通用的sql查询条件抽取出来,成为sql片段 ,给不同方法应用 -->
	<sql id="query_user_sql_where">
		<if test="userName!=null">
			AND USER_NAME LIKE '%${userName}%'
		</if>
		<if test="loginName!=null">
			AND LOGIN_NAME= #{loginName}
		</if>
		<if test="password!=null">
			AND PASSWORD= #{password}
		</if>
	</sql>

	<!--根据条件查询 用户列表 -->
	<select id="getUserList" parameterType="user" resultType="user">
		SELECT
		<include refid="Base_Column_List"></include>
		FROM PM_SYS_USER
		<where>
			<include refid="query_user_sql_where"></include>
		</where>
	</select>

	<!--根据用户id查询 用户信息 -->
	<select id="getUserInfoById" parameterType="long" resultType="userDto">
		SELECT

		A.USER_ID,A.DEPT_ID,A.LOGIN_NAME,A.PASSWORD,
		A.USER_NO,A.USER_NAME,A.EMAIL,A.PHONE,A.MOBILE,
		A.UPDATE_BY,A.UPDATE_DATE,A.REMARKS,B.NAME DEPT_NAME

		FROM PM_SYS_USER
		A,PM_SYS_DEPT B

		WHERE A.USER_ID=#{userId} AND A.DEPT_ID = B.ID
	</select>

	<!--保存用户修改密码 -->
	<update id="updatePwd">
		UPDATE PM_SYS_USER SET PASSWORD = #{1}
		WHERE USER_ID =
		#{0}
	</update>

	<!-- 获取所有用户信息，返回user类型对象 -->
	<select id="getAllUserInfo" resultType="user">
		SELECT
		<include refid="Base_Column_List"></include>
		FROM PM_SYS_USER WHERE del_flag = 0
	</select>
	
	<!-- 获取所有用户信息，返回userDto类型对象 -->
	<select id="getUserDtoList" parameterType="user" resultType="userDto">
		SELECT A.USER_ID,A.DEPT_ID,A.LOGIN_NAME,
   		 A.USER_NO,A.USER_NAME,A.EMAIL,A.PHONE,A.MOBILE,
   		 A.UPDATE_BY,A.UPDATE_DATE,A.REMARKS,B.NAME DEPT_NAME 
   		 FROM PM_SYS_USER A ,PM_SYS_DEPT B
		<where>
			AND A.DEPT_ID = B.ID
		 	<if test="userName!=null"> 
				AND A.USER_NAME LIKE '%${userName}%'
	 		</if>					
			<if test="deptId!=null"> 
				AND A.DEPT_ID= #{deptId}
			</if>			
		 </where>	
	</select> 

	<!-- 新增用户 -->
	<insert id="addUser" parameterType="user">
		<selectKey  keyProperty="userId" resultType="long" order="AFTER">
			SELECT
			LAST_INSERT_ID() as userId
		</selectKey>
		INSERT INTO PM_SYS_USER
		(DEPT_ID,LOGIN_NAME,PASSWORD,
		USER_NO,USER_NAME,EMAIL,PHONE,MOBILE,
		UPDATE_BY,UPDATE_DATE,REMARKS)
		VALUES
		(#{deptId},#{loginName},#{password},
		#{userNo},#{userName},#{email},#{phone},
		#{mobile},#{updateBy},#{updateDate},#{remarks})
	</insert>
	
	<!-- 删除用户 -->
	<delete id="delUser" parameterType="java.lang.Long">
		DELETE FROM PM_SYS_USER WHERE USER_ID=#{id}
	</delete>
	
	<!-- 根据用户id查询用户所拥有的角色 -->
	<select id="getUserRoleByUserId" parameterType="long" resultType="userToRole"> 
		 SELECT USER_ID,ROLE_ID FROM PM_SYS_USER_ROLE WHERE USER_ID=#{userId}
	</select>
	
	<!-- 修改用户和部门id -->
	<update id="updateUser" parameterType="user">
		UPDATE PM_SYS_USER  
		<set> 
			<if test="deptId != null">
	            DEPT_ID = #{deptId},
	        </if>
	        <if test="loginName != null">
	            LOGIN_NAME = #{loginName},
	        </if>   
	        <if test="userNo != null">
	            USER_NO = #{userNo},
	        </if>
	        <if test="userName != null">
	            USER_NAME = #{userName},
	        </if>	
	        <if test="email != null">
	            EMAIL = #{email},
	        </if>
	        <if test="phone != null">
	            PHONE = #{phone},
	        </if>
	         <if test="mobile != null">
	            MOBILE = #{mobile},
	        </if>
	        <if test="updateBy != null">
	            UPDATE_BY = #{updateBy},
	        </if>
	        <if test="updateDate != null">
	            UPDATE_DATE = #{updateDate},
	        </if>
	        <if test="remarks != null">
	            REMARKS = #{remarks},
	        </if>		 
		</set>
		WHERE USER_ID = #{userId}
 	</update>
</mapper>